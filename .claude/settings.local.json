{
  "permissions": {
    "allow": [
      "Bash(PYTHONPATH:*)",
      "Bash(find:*)",
      "WebFetch(domain:opentelemetry.io)",
      "WebFetch(domain:opentelemetry-python.readthedocs.io)",
      "WebFetch(domain:localhost)",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(timeout:*)",
      "Bash(OPENOBSERVE_PASSWORD=password )",
      "Bash(OPENOBSERVE_URL=http://localhost:5080/api/default )",
      "Bash(OPENOBSERVE_USER=tim@provide.io )",
      "Bash(OPENOBSERVE_PASSWORD=password )",
      "Bash(OPENOBSERVE_URL=http://localhost:5080/api/default )",
      "Bash(OPENOBSERVE_USER=\"tim@provide.io\" )",
      "Bash(foundation logs generate:*)",
      "Bash(PROVIDE_LOG_RATE_LIMIT_ENABLED=true PROVIDE_LOG_RATE_LIMIT_GLOBAL=10 PROVIDE_LOG_RATE_LIMIT_GLOBAL_CAPACITY=20 timeout 3 foundation logs generate -n 0 --style burroughs -r 100)",
      "Bash(PROVIDE_LOG_RATE_LIMIT_ENABLED=true PROVIDE_LOG_RATE_LIMIT_GLOBAL=10 PROVIDE_LOG_RATE_LIMIT_GLOBAL_CAPACITY=20 PROVIDE_LOG_RATE_LIMIT_EMIT_WARNINGS=true PROVIDE_LOG_RATE_LIMIT_SUMMARY_INTERVAL=3 timeout 7 foundation logs generate -n 0 --style burroughs -r 100)",
      "Bash(PROVIDE_LOG_RATE_LIMIT_ENABLED=true PROVIDE_LOG_RATE_LIMIT_GLOBAL=10 PROVIDE_LOG_RATE_LIMIT_GLOBAL_CAPACITY=20 PROVIDE_LOG_RATE_LIMIT_EMIT_WARNINGS=true PROVIDE_LOG_RATE_LIMIT_SUMMARY_INTERVAL=3 foundation logs generate -n 0 --style burroughs -r 100)",
      "Bash(PROVIDE_LOG_RATE_LIMIT_ENABLED=true PROVIDE_LOG_RATE_LIMIT_GLOBAL=5 PROVIDE_LOG_RATE_LIMIT_GLOBAL_CAPACITY=10 PROVIDE_LOG_RATE_LIMIT_MAX_QUEUE_SIZE=20 PROVIDE_LOG_RATE_LIMIT_OVERFLOW_POLICY=drop_oldest PROVIDE_LOG_RATE_LIMIT_SUMMARY_INTERVAL=2 timeout 5 foundation logs generate -n 0 --style burroughs -r 100)",
      "Bash(while read file)",
      "Bash(awk:*)",
      "Bash(./validate-pipeline.sh)",
      "Bash(rye run:*)",
      "Bash(pip install:*)",
      "Bash(/Users/tim/code/gh/provide-io/provide-foundation/.venv/bin/python -c \"\nimport radon.metrics\nprint(''Available in radon.metrics:'', dir(radon.metrics))\n\")",
      "Bash(tree:*)",
      "Bash(./examples/quality/framework_demo.py)",
      "Bash(./examples/quality/decorators_demo.py)",
      "Bash(./examples/quality/generate_reports.py)",
      "Bash(coverage run:*)",
      "Bash(coverage report:*)",
      "WebSearch",
      "Bash(FOUNDATION_SUPPRESS_TESTING_WARNINGS=1 pytest examples/basics/first_test.py::test_my_first_testkit_test -v)",
      "Bash(TESTKIT_SUPPRESS_WARNINGS=1 pytest examples/basics/first_test.py::test_my_first_testkit_test -v)",
      "Bash(TESTKIT_SUPPRESS_WARNINGS=1 pytest simple_testkit_test.py -v)",
      "Bash(ruff format:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(git mv:*)",
      "Bash(source env.sh)",
      "Bash(source:*)",
      "Bash(mypy:*)",
      "Bash(PYTHONPATH=src python3:*)",
      "Bash(PYTHONPATH=src:. python3:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/tim/code/gh/provide-io"
    ]
  }
}
