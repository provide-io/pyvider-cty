name: 🚀 Continuous Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  continuous-deployment:
    name: 🧪 Continuous Deployment
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔐 Parse Organization Helpers
        uses: provide-io/ci-tooling/actions/parse-org-helpers@main
        env:
          GH_ORG_HELPERS: ${{ secrets.GH_ORG_HELPERS }}

      - name: 🔐 Setup GitHub Auth
        env:
          GH_ORG_HELPERS: ${{ secrets.GH_ORG_HELPERS }}
        run: python3 scripts/setup_github_auth.py

      - name: 🔖 Generate Post Version
        uses: provide-io/ci-tooling/actions/generate-post-version@af82cf34aa21d8a2c0cb9f79254923d443c40d87
        id: post-version

      - name: 🐍 Setup Python Environment
        uses: provide-io/ci-tooling/actions/setup-python-env@v0.2.3
        with:
          python-version: '3.11'
          install-extras: 'dev'

      - name: 🧪 Run Quick Tests
        uses: provide-io/ci-tooling/actions/python-test@v0.2.3
        with:
          test-directory: 'tests/'
          source-directory: 'src/'
          coverage-threshold: 75

      - name: 📦 Build Package with UV
        run: |
          source ./workenv/bin/activate
          uv build

      - name: 📤 Deploy to TestPyPI with UV
        run: |
          source ./workenv/bin/activate
          uv publish \
            --publish-url https://test.pypi.org/legacy/ \
            --token "${{ secrets.TESTPYPI_API_TOKEN }}" \
            dist/*

      - name: 📋 Deployment Summary
        run: |
          echo "🎉 Continuous deployment completed!"
          echo "📦 Post version: ${{ steps.post-version.outputs.post-version }}"
          echo "📦 Base version: ${{ steps.post-version.outputs.base-version }}"
          echo "🧪 Deployed to TestPyPI: https://test.pypi.org/project/pyvider-cty/"
          echo "✅ Ready for manual release to production PyPI"